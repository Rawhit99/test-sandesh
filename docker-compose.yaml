services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: emails
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d emails"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    image: rohithakur0208/sandesh-email-backend:latest
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/emails
      API_HOST: 0.0.0.0
      API_PORT: 8000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-ap-south-1}
      SES_SENDER_EMAIL: ${SES_SENDER_EMAIL}
      SES_CONFIGURATION_SET: ${SES_CONFIGURATION_SET}
      EMAIL_PROVIDER: ${EMAIL_PROVIDER:-ses}
      API_KEYS: ${API_KEYS:-1234}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_USE_TLS: ${SMTP_USE_TLS:-true}
      SMTP_USE_SSL: ${SMTP_USE_SSL:-false}
      SMTP_SENDER_EMAIL: ${SMTP_SENDER_EMAIL}
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: rohithakur0208/sandesh-email-frontend:latest
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local